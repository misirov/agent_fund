version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=celoaifund
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/code
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/celoaifund
    command: alembic upgrade head
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/code
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/celoaifund
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  discord_bot:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/code
    depends_on:
      app:
        condition: service_started
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/celoaifund
      - API_URL=http://app:8000
    command: python -m app.agents.main
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data: 