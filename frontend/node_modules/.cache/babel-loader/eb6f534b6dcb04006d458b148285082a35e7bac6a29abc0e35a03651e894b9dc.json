{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const getUsers = async () => {\n  const response = await api.get('/users/');\n  return response.data;\n};\nexport const getChannels = async () => {\n  const response = await api.get('/channels/');\n  return response.data;\n};\nexport const getMessages = async (limit = 100) => {\n  const response = await api.get(`/messages/?limit=${limit}`);\n  return response.data;\n};\nexport const getProtocols = async () => {\n  const response = await api.get('/protocols/');\n  return response.data;\n};\nexport const getProtocolSentiment = async protocolName => {\n  const response = await api.get(`/protocols/${protocolName}/sentiment`);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","getUsers","response","get","data","getChannels","getMessages","limit","getProtocols","getProtocolSentiment","protocolName"],"sources":["/Users/misirov/projects/hackathon/eth_taipei/fund_agent/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const getUsers = async () => {\n  const response = await api.get('/users/');\n  return response.data;\n};\n\nexport const getChannels = async () => {\n  const response = await api.get('/channels/');\n  return response.data;\n};\n\nexport const getMessages = async (limit = 100) => {\n  const response = await api.get(`/messages/?limit=${limit}`);\n  return response.data;\n};\n\nexport const getProtocols = async () => {\n  const response = await api.get('/protocols/');\n  return response.data;\n};\n\nexport const getProtocolSentiment = async (protocolName) => {\n  const response = await api.get(`/protocols/${protocolName}/sentiment`);\n  return response.data;\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMH,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOC,KAAK,GAAG,GAAG,KAAK;EAChD,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,oBAAoBI,KAAK,EAAE,CAAC;EAC3D,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;EAC7C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,oBAAoB,GAAG,MAAOC,YAAY,IAAK;EAC1D,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,cAAcO,YAAY,YAAY,CAAC;EACtE,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}